[{"C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\App.tsx":"1","C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\index.tsx":"2","C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\Room.tsx":"3","C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\Home.tsx":"4","C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\Message.ts":"5","C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\RoleView.tsx":"6","C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\AssignmentDialog.tsx":"7","C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\reportWebVitals.ts":"8","C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\PresetDialog.tsx":"9"},{"size":495,"mtime":1610490993170,"results":"10","hashOfConfig":"11"},{"size":500,"mtime":1610488252939,"results":"12","hashOfConfig":"11"},{"size":14964,"mtime":1621373285914,"results":"13","hashOfConfig":"11"},{"size":2065,"mtime":1620945442984,"results":"14","hashOfConfig":"11"},{"size":1882,"mtime":1620948216117,"results":"15","hashOfConfig":"11"},{"size":1482,"mtime":1611004846348,"results":"16","hashOfConfig":"11"},{"size":1221,"mtime":1620947759736,"results":"17","hashOfConfig":"11"},{"size":425,"mtime":1610488252939,"results":"18","hashOfConfig":"11"},{"size":3041,"mtime":1611354778779,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},"11ts2vu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"27","messages":"28","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39"},"C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\App.tsx",["40","41"],"import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nimport {Home} from \"./components/Home\";\nimport {Room} from \"./components/Room\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/:roomCode\">\n          <Room />\n        </Route>\n        <Route path=\"/\">\n          <Home />\n        </Route>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\index.tsx",[],"C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\Room.tsx",["42","43","44","45","46","47"],"C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\Home.tsx",["48"],"C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\Message.ts",[],"C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\RoleView.tsx",[],"C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\AssignmentDialog.tsx",[],"C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\reportWebVitals.ts",[],"C:\\Users\\1570s\\Documents\\Projects\\RoleAssigner\\frontend\\src\\components\\PresetDialog.tsx",["49"],"import React, {FunctionComponent, useEffect, useState} from \"react\";\r\nimport {Role} from \"../Message\";\r\nimport { styled } from '@material-ui/core/styles';\r\nimport {Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Chip} from \"@material-ui/core\";\r\n\r\n\r\n\r\ninterface Preset {\r\n    name: string\r\n    roles: Array<Role>\r\n}\r\n\r\nconst presets: Array<Preset> = [\r\n    {\r\n        name: \"Empty\", roles: []\r\n    },\r\n    {\r\n        name: \"Secret Hitler\", roles: [\r\n            {name: \"Hitler\", quantity: 1, team: \"Evil\"},\r\n            {name: \"Facist\", quantity: 2, team: \"Evil\"},\r\n            {name: \"Liberal\", quantity: 4, team: \"Good\"}\r\n        ]\r\n    },\r\n    {\r\n        name: \"Avalon\", roles: [\r\n            {name: \"Assassin\", quantity: 1, team: \"Evil\"},\r\n            {name: \"Morgana\", quantity: 1, team: \"Evil\"},\r\n            {name: \"Mordred\", quantity: 1, team: \"Evil\"},\r\n            {name: \"Merlin\", quantity: 1, team: \"Good\"},\r\n            {name: \"Percival\", quantity: 1, team: \"Good\"},\r\n            {name: \"Liberal\", quantity: 2, team: \"Good\"}\r\n        ]\r\n    },\r\n    {\r\n        name: \"Mafia\", roles: [\r\n            {name: \"Mafia\", quantity: 3, team: \"Evil\"},\r\n            {name: \"Detective\", quantity: 1, team: \"Good\"},\r\n            {name: \"Medic\", quantity: 1, team: \"Good\"},\r\n            {name: \"Liberal\", quantity: 10, team: \"Good\"}\r\n        ]\r\n    },\r\n    {\r\n        name: \"Code Names\", roles: [\r\n            {name: \"Red Code Master\", quantity: 1, team: \"Red\"},\r\n            {name: \"Blue Code Master\", quantity: 1, team: \"Blue\"},\r\n            {name: \"Red Team Member\", quantity: 2, team: \"Red\"},\r\n            {name: \"Blue Team Memeber\", quantity: 2, team: \"Blue\"}\r\n        ]\r\n    },\r\n    {\r\n        name: \"Two Team (General)\", roles: [\r\n            {name: \"Players of Team 1\", quantity: 5, team: \"Team 1\"},\r\n            {name: \"Players of Team 2\", quantity: 5, team: \"Team 2\"},\r\n        ]\r\n    }\r\n]\r\n\r\nconst StyledChip = styled(Chip)({\r\n    margin: '0.15rem',\r\n});\r\n\r\n\r\nexport const PresetDialog: FunctionComponent<{ visible: boolean, onSelect: (preset: Preset | null) => any }> = props => {\r\n    const [chosenPreset, setChosenPreset] = useState<Preset | null>(null)\r\n\r\n    // Reset the UI on close\r\n    useEffect(() => {\r\n            if (!props.visible)\r\n                setChosenPreset(null)\r\n        }, [props.visible])\r\n\r\n    return <Dialog open={props.visible} onClose={() => props.onSelect(null)}>\r\n        <DialogTitle>Choose a role preset</DialogTitle>\r\n        <DialogContent>\r\n            {presets.map(preset =>\r\n                <StyledChip key={preset.name} label={preset.name} color={chosenPreset === preset ? \"primary\" : \"default\"}\r\n                      onClick={() => setChosenPreset(preset)}/>)}\r\n        </DialogContent>\r\n        <DialogActions>\r\n            <Button onClick={() => props.onSelect(null)} color=\"primary\" autoFocus>Cancel</Button>\r\n            <Button onClick={() => props.onSelect(chosenPreset)} color=\"primary\" autoFocus>Select</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n}",{"ruleId":"50","severity":1,"message":"51","line":2,"column":8,"nodeType":"52","messageId":"53","endLine":2,"endColumn":12},{"ruleId":"50","severity":1,"message":"54","line":9,"column":3,"nodeType":"52","messageId":"53","endLine":9,"endColumn":7},{"ruleId":"50","severity":1,"message":"55","line":53,"column":11,"nodeType":"52","messageId":"53","endLine":53,"endColumn":24},{"ruleId":"56","severity":1,"message":"57","line":65,"column":25,"nodeType":"58","messageId":"59","endLine":65,"endColumn":27},{"ruleId":"56","severity":1,"message":"57","line":73,"column":38,"nodeType":"58","messageId":"59","endLine":73,"endColumn":40},{"ruleId":"50","severity":1,"message":"60","line":103,"column":9,"nodeType":"52","messageId":"53","endLine":103,"endColumn":20},{"ruleId":"50","severity":1,"message":"61","line":105,"column":9,"nodeType":"52","messageId":"53","endLine":105,"endColumn":20},{"ruleId":"62","severity":1,"message":"63","line":164,"column":8,"nodeType":"64","endLine":164,"endColumn":25,"suggestions":"65"},{"ruleId":"50","severity":1,"message":"66","line":1,"column":16,"nodeType":"52","messageId":"53","endLine":1,"endColumn":33},{"ruleId":"50","severity":1,"message":"67","line":4,"column":55,"nodeType":"52","messageId":"53","endLine":4,"endColumn":72},"@typescript-eslint/no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link' is defined but never used.","'SystemMessage' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'sendMessage' is assigned a value but never used.","'lastMessage' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'chatMessages', 'roles', and 'users'. Either include them or remove the dependency array. You can also do a functional update 'setChatMessages(c => ...)' if you only need 'chatMessages' in the 'setChatMessages' call.","ArrayExpression",["68"],"'FunctionComponent' is defined but never used.","'DialogContentText' is defined but never used.",{"desc":"69","fix":"70"},"Update the dependencies array to be: [chatMessages, lastJsonMessage, roles, users]",{"range":"71","text":"72"},[6072,6089],"[chatMessages, lastJsonMessage, roles, users]"]